{"version":3,"sources":["sample.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","styled","nav","MyButton","button","App","useState","textarea","text","setText","className","value","onChange","event","target","rows","cols","onClick","i","encryptor","messagearr","split","join","length","letter","push","prompt","decryptor","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac9831e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Navbar = styled.nav`\r\nbackground-color: green;\r\nwidth: 100vw;\r\nheight: 9vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 26px;\r\nfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n`\r\nexport const MyButton = styled.button`\r\nwidth: 200px;\r\nheight: 50px;\r\nalign-self: center;\r\nmargin-top: 20px;\r\nbackground-color: lightblue;\r\nborder-radius: 20px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items:center;\r\n`","import { Navbar, MyButton } from \"./sample\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nfunction App() {\n\n  const [textarea, setTextarea] = useState(false);\n  var code = \"123\";\n  const [text, setText] = useState(\"\");\n  const handleonChange = (event) => {\n    setText(event.target.value);\n  };\n  const cleartext = () => {\n    setText(\"\");\n  };\n  const decrypt = () => {\n    var prop = prompt(\"Enter the decryption code\");\n    if (prop === code) {\n      let decryptor = [];\n      let i;\n      const messagearr = text.split(\" \").join(\" \");\n      // const messagearr = messagear.split(\"\")\n      for (i = 0; i < messagearr.length; i++) {\n        let letter;\n        switch (messagearr[i]) {\n          case \"+\":\n            letter = \"a\";\n            break;\n          case \"-\":\n            letter = \"b\";\n            break;\n          case \"*\":\n            letter = \"c\";\n            break;\n          case \"/\":\n            letter = \"d\";\n            break;\n          case \"|\":\n            letter = \"e\";\n            break;\n          case \"`\":\n            letter = \"f\";\n            break;\n          case \"~\":\n            letter = \"g\";\n            break;\n          case \"!\":\n            letter = \"h\";\n            break;\n          case \"@\":\n            letter = \"i\";\n            break;\n          case \"#\":\n            letter = \"j\";\n            break;\n          case \"$\":\n            letter = \"k\";\n            break;\n          case \"%\":\n            letter = \"l\";\n            break;\n          case \"^\":\n            letter = \"m\";\n            break;\n          case \"&\":\n            letter = \"n\";\n            break;\n          case \"(\":\n            letter = \"o\";\n            break;\n          case \")\":\n            letter = \"p\";\n            break;\n          case \"=\":\n            letter = \"q\";\n            break;\n          case \"_\":\n            letter = \"r\";\n            break;\n          case \"]\":\n            letter = \"s\";\n            break;\n          case \"[\":\n            letter = \"t\";\n            break;\n          case \"}\":\n            letter = \"u\";\n            break;\n          case \"{\":\n            letter = \"v\";\n            break;\n          case \">\":\n            letter = \"w\";\n            break;\n          case \"<\":\n            letter = \"x\";\n            break;\n          case \":\":\n            letter = \"y\";\n            break;\n          case \"?\":\n            letter = \"z\";\n            break;\n          default:\n            letter = messagearr[i];\n        }\n        decryptor.push(letter);\n      }\n\n      setText(decryptor.join(\"\"));\n      // setTextarea(\"new\")\n    }\n  else {\n      alert(\"Wrong Code\")\n    }\n  };\n  const encrypt = () => {\n    let encryptor = [];\n    let i;\n    const messagearr = text.split(\"\").join(\"\");\n    // const messagearr = messagear.split(\"\")\n    for (i = 0; i < messagearr.length; i++) {\n      let letter;\n      switch (messagearr[i]) {\n        case \"a\":\n          letter = \"+\";\n          break;\n        case \"b\":\n          letter = \"-\";\n          break;\n        case \"c\":\n          letter = \"*\";\n          break;\n        case \"d\":\n          letter = \"/\";\n          break;\n        case \"e\":\n          letter = \"|\";\n          break;\n        case \"f\":\n          letter = \"`\";\n          break;\n        case \"g\":\n          letter = \"~\";\n          break;\n        case \"h\":\n          letter = \"!\";\n          break;\n        case \"i\":\n          letter = \"@\";\n          break;\n        case \"j\":\n          letter = \"#\";\n          break;\n        case \"k\":\n          letter = \"$\";\n          break;\n        case \"l\":\n          letter = \"%\";\n          break;\n        case \"m\":\n          letter = \"^\";\n          break;\n        case \"n\":\n          letter = \"&\";\n          break;\n        case \"o\":\n          letter = \"(\";\n          break;\n        case \"p\":\n          letter = \")\";\n          break;\n        case \"q\":\n          letter = \"=\";\n          break;\n        case \"r\":\n          letter = \"_\";\n          break;\n        case \"s\":\n          letter = \"]\";\n          break;\n        case \"t\":\n          letter = \"[\";\n          break;\n        case \"u\":\n          letter = \"}\";\n          break;\n        case \"v\":\n          letter = \"{\";\n          break;\n        case \"w\":\n          letter = \">\";\n          break;\n        case \"x\":\n          letter = \"<\";\n          break;\n        case \"y\":\n          letter = \":\";\n          break;\n        case \"z\":\n          letter = \"?\";\n          break;\n        default:\n          letter = messagearr[i];\n      }\n\n      encryptor.push(letter);\n    }\n    setText(encryptor.join(\"\"));\n  };\n  return (\n    <div className=\"app\">\n      <Navbar></Navbar>\n      <form className=\"container\">\n        <textarea\n          className={textarea}\n          value={text}\n          onChange={handleonChange}\n          rows=\"10\"\n          cols=\"70\"\n        />\n      </form>\n      <MyButton onClick={encrypt}>\n        <h2>Encrypt</h2>\n      </MyButton>\n      <MyButton onClick={decrypt}>\n        <h2>Decrypt</h2>\n      </MyButton>\n      <MyButton onClick={cleartext}>\n        <h2>clear</h2>\n      </MyButton>\n      {/* <form className=\"container\">\n        <textarea\n          className={textarea}\n          value={text}\n          onChange={handleonChange}\n          rows=\"5\"\n          cols=\"80\"\n        />\n      </form> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}